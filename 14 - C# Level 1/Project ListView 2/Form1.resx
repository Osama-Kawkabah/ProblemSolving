<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACu
        DgAAAk1TRnQBSQFMAgEBAgEAAQgBAAEIAQABHgEAAR4BAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABeAMAAR4DAAEBAQABCAUAARABDhgAAYACAAGAAwACgAEAAYADAAGAAQABgAEAAoACAAPAAQABwAHc
        AcABAAHwAcoBpgEAATMFAAEzAQABMwEAATMBAAIzAgADFgEAAxwBAAMiAQADKQEAA1UBAANNAQADQgEA
        AzkBAAGAAXwB/wEAAlAB/wEAAZMBAAHWAQAB/wHsAcwBAAHGAdYB7wEAAdYC5wEAAZABqQGtAgAB/wEz
        AwABZgMAAZkDAAHMAgABMwMAAjMCAAEzAWYCAAEzAZkCAAEzAcwCAAEzAf8CAAFmAwABZgEzAgACZgIA
        AWYBmQIAAWYBzAIAAWYB/wIAAZkDAAGZATMCAAGZAWYCAAKZAgABmQHMAgABmQH/AgABzAMAAcwBMwIA
        AcwBZgIAAcwBmQIAAswCAAHMAf8CAAH/AWYCAAH/AZkCAAH/AcwBAAEzAf8CAAH/AQABMwEAATMBAAFm
        AQABMwEAAZkBAAEzAQABzAEAATMBAAH/AQAB/wEzAgADMwEAAjMBZgEAAjMBmQEAAjMBzAEAAjMB/wEA
        ATMBZgIAATMBZgEzAQABMwJmAQABMwFmAZkBAAEzAWYBzAEAATMBZgH/AQABMwGZAgABMwGZATMBAAEz
        AZkBZgEAATMCmQEAATMBmQHMAQABMwGZAf8BAAEzAcwCAAEzAcwBMwEAATMBzAFmAQABMwHMAZkBAAEz
        AswBAAEzAcwB/wEAATMB/wEzAQABMwH/AWYBAAEzAf8BmQEAATMB/wHMAQABMwL/AQABZgMAAWYBAAEz
        AQABZgEAAWYBAAFmAQABmQEAAWYBAAHMAQABZgEAAf8BAAFmATMCAAFmAjMBAAFmATMBZgEAAWYBMwGZ
        AQABZgEzAcwBAAFmATMB/wEAAmYCAAJmATMBAANmAQACZgGZAQACZgHMAQABZgGZAgABZgGZATMBAAFm
        AZkBZgEAAWYCmQEAAWYBmQHMAQABZgGZAf8BAAFmAcwCAAFmAcwBMwEAAWYBzAGZAQABZgLMAQABZgHM
        Af8BAAFmAf8CAAFmAf8BMwEAAWYB/wGZAQABZgH/AcwBAAHMAQAB/wEAAf8BAAHMAQACmQIAAZkBMwGZ
        AQABmQEAAZkBAAGZAQABzAEAAZkDAAGZAjMBAAGZAQABZgEAAZkBMwHMAQABmQEAAf8BAAGZAWYCAAGZ
        AWYBMwEAAZkBMwFmAQABmQFmAZkBAAGZAWYBzAEAAZkBMwH/AQACmQEzAQACmQFmAQADmQEAApkBzAEA
        ApkB/wEAAZkBzAIAAZkBzAEzAQABZgHMAWYBAAGZAcwBmQEAAZkCzAEAAZkBzAH/AQABmQH/AgABmQH/
        ATMBAAGZAcwBZgEAAZkB/wGZAQABmQH/AcwBAAGZAv8BAAHMAwABmQEAATMBAAHMAQABZgEAAcwBAAGZ
        AQABzAEAAcwBAAGZATMCAAHMAjMBAAHMATMBZgEAAcwBMwGZAQABzAEzAcwBAAHMATMB/wEAAcwBZgIA
        AcwBZgEzAQABmQJmAQABzAFmAZkBAAHMAWYBzAEAAZkBZgH/AQABzAGZAgABzAGZATMBAAHMAZkBZgEA
        AcwCmQEAAcwBmQHMAQABzAGZAf8BAALMAgACzAEzAQACzAFmAQACzAGZAQADzAEAAswB/wEAAcwB/wIA
        AcwB/wEzAQABmQH/AWYBAAHMAf8BmQEAAcwB/wHMAQABzAL/AQABzAEAATMBAAH/AQABZgEAAf8BAAGZ
        AQABzAEzAgAB/wIzAQAB/wEzAWYBAAH/ATMBmQEAAf8BMwHMAQAB/wEzAf8BAAH/AWYCAAH/AWYBMwEA
        AcwCZgEAAf8BZgGZAQAB/wFmAcwBAAHMAWYB/wEAAf8BmQIAAf8BmQEzAQAB/wGZAWYBAAH/ApkBAAH/
        AZkBzAEAAf8BmQH/AQAB/wHMAgAB/wHMATMBAAH/AcwBZgEAAf8BzAGZAQAB/wLMAQAB/wHMAf8BAAL/
        ATMBAAHMAf8BZgEAAv8BmQEAAv8BzAEAAmYB/wEAAWYB/wFmAQABZgL/AQAB/wJmAQAB/wFmAf8BAAL/
        AWYBAAEhAQABpQEAA18BAAN3AQADhgEAA5YBAAPLAQADsgEAA9cBAAPdAQAD4wEAA+oBAAPxAQAD+AEA
        AfAB+wH/AQABpAKgAQADgAMAAf8CAAH/AwAC/wEAAf8DAAH/AQAB/wEAAv8CAAP/DAAB/wESBA8BEgH/
        DAAB9AF0CVIBKwEqAUMBDwFSC3oB80gAAQcB6gG7AwcBbQEHDAAB/wGZCFIBKwEqAUsCEQFSBHoHmgH/
        SAABBwERARQDEwERAQcNAAH/AZkEUgJLASoBJAEqAUoCEQEiAVkCegaaARoB/0gAAf8B7AESAZEBCQG8
        Ae0B6gHsAf8NAAH/AfMBmQFSAUwCSwEkAioBRAERARUBQwNZBHoBGgH0Af9JAAEUAW0C6wIHA+sBFRAA
        Af8B8wEaAXQCSwEjAkQBSwF0A3oBmgEbAfQB/0wAARQBbQfrARUTAAH/AZkDRAFFAUsBdAGZAXQBmgH/
        TwAB/wHsARQBcgEUAWYBkQFmAewB/xQAAfMBSgFLAUUCSwFMAXQBkwEbRwAB/wHtAfQHAAH3AXIBmAFy
        AYsB3AGRAfcHAAH0Ae0B/wsAAf8B8QJLAXMCkwF0ARoB/0gAAfIBEwHyBAAB/wGSARECmAFyAYsC3AER
        AZIB/wQAAfIBEwHyCgAB/wHvAUQBUQJuAXQBkwKZAXQBbgHvAf9HAAL/AwAB8wEVAXIDmAFyAYsD3AGu
        ARUB8wMAAv8LAAHzAUMBdAFLA24BdASZARIB8ksAAfQBEQGdBJgBcgFDAboD3AG0AREB9A4AAfQBEAES
        AXMBSwFuAUsBbgF0ApMCmQFuARMB9EkAAf8BFAGdBpgBcgFDBNwBtAEUAf8NAAH/AUsBcwFuAUsBbgFL
        AUQBbgWZARwB/0kAAe8BbAiYAQ8F3AFsAQcNAAHuAUoBcwJuAXQBbgF0ARoBmgSZAZMBG0gAAf8BEQeY
        AXMBEAGLBtwBFQH/CwAB/wFLARQCbgF0ApMBdAEbBRoBbgGaAf9CAAG8AQcB8gIAAfIBFQeYAXIBiwfc
        AWYB8wIAAfIBBwG8BgAB9AFEARQBcwFuAW0BbgFzAXQBGgGZAW4B7QIaAW4BmQH/QgABvAEHAfICAAEH
        AWwCmAIQARECmAFyAYsH3AGLAQcCAAHyAQcBvAYAAfMBRAEUAW4BbQFDARABSgFuAnQBEQHrARwBGgHq
        AXQB80cAAe8BEQFJAREBRQHjAUQBQwFJAhECZgG0AdwBtAJmAUMB7wsAAfcBQwEOAUoBSwNEAXMBdAFE
        AW4BdAGaAZkBEAFKAe9HAAHvAUQCaQPjAmkBRAFKAXQBUQFDAbQBZgFLAXQBSgHvCgAB/wHqAREBDgER
        ARABDwERARQBbgGTAfgB6wJtAW4BDwFEAW5HAAG8AUQH4wFFAUsCegFRAUMBSwJ6AUoBvAoAAf8BFAER
        AQ8CEAEVAeoCEQEVAXMBBwJuAUoBDwFEAeoB/0YAAfQBCwfjAUMBSwd6AUMB9AoAAf8B6gEVAREBEAER
        ARABEQEQAkMBFQH4AUQBFAIQARMB6gH/RAAC/wEAARIBRgXjAREBSwd6AXkB6gEAAv8IAAH/AewBFAEP
        AUMBEQJDAREBDwMUAQ4BEwERARUCbQH/QwAB8gETAfIBAAHxAQwF4wEOCHoBSgHxAQAB8gETAfIIAAEH
        AeoCEQMVARQBFQFDAeoBbQEUAW0BFQHrAW0B90MAAf8B7QH0AwAB7wXjAUQBFQF5BXoBeQH2AwAB9AHt
        Af8HAAHyAW0BFAJDAhQBEwLqARMB+AFtAusB+AHrAfJKAAG8AUUE4wFEAUsEegFKAW0B/w0AAf8BkgET
        ARQCFQETAeoB6wHsAe0B6gESAeoB7AH4AQcB/0oAAf8BkgELAUYC4wFFAUsCegF0AUMBkgH/DwAB8wFt
        AxMCFAETAW0B6wHsAeoB6wHtAe8B/0sAAfIB/wHzAfgBDwFEAREBQwEUARAB+AHzAf8B8hAAAfABbQIS
        AeoBbQLrAewB7QH4AewB7wH/SwAB9AETAf8CAAH/AfMC8QHzAf8CAAH/ARMB9BAAAfAB6gESBOoB6wHv
        Av9NAAHtAfIFAALyBQAB8gHtEQAB/wHwAe8B7QH4AZIBvAH/TwAB/wYAAgcGAAH/bwACvGgAAUIBTQE+
        BwABPgMAASgDAAF4AwABHgMAAQEBAAEBBQAB4AEBFgAD/wEAAf8B4AEfAf4DAAEQCAAB/wHgAR8B/gMA
        ARAIAAH/AeABHwH/AwABMAgAAf8BwAEPAf8BgAIAAXAIAAH/AcABDwH/AfABAAEDAfAIAAH/AcABDwH/
        Af4BAAEfAfAIAAH/AcABDwL/AQABPwHwCAABjwHgAR8BxwH/AQABPwHwCAABxwGAAQcBjwH8AQABDwHw
        CAAB5wEAAQMBnwH8AQABDwHwCAAB/gEAAQEB/wH4AQABBwHwCAAB/AIAAf8B+AEAAQcB8AgAAfwCAAH/
        AfgBAAEHAfAIAAH4AgABfwHwAQABAwHwCAABGAIAAWMB8AEAAQMB8AgAARgCAAFjAfABAAEDAfAIAAH4
        AgABfwHwAQABAwHwCAAB+AIAAX8B4AEAAQMB8AgAAfgCAAF/AeABAAEBAfAIAAH4AgABfwHgAQABAQHw
        CAAB5AIAAZ8B4AEAAQEB8AgAAcQCAAGPAfABAAEDAfAIAAGOAQABAQHHAfABAAEDAfAIAAH/AQABAQH/
        AfABAAEDAfAIAAH/AQABAwH/AfgBAAEHAfAIAAH/AQABAwH/AfwBAAEPAfAIAAH+ATABMQH/Af4BAAE/
        AfAIAAH+AXwB+QL/AQAB/wHwCAAB/gH8Af0E/wHwCAAB/wH8Bf8B8AgACw==
</value>
  </data>
</root>