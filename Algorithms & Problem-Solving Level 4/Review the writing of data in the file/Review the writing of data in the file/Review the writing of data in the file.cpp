#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <iomanip>

using namespace std;
string ClientsFileName = "Client.txt";

//-------------------------------------------------
//  ÕÊÌ· „‰ Client «·Ï ‰’ Ê⁄·«„Â#//#
//-------------------------------------------------
//struct sClient {
//    string AccountNumber;
//    string PinCode;
//    string Name;
//    string Phone;
//    double AccountBalance;
//};
//sClient ReadNewClient() {
//    sClient Client;
//    cout << "Enter Account Number? ";
//    getline(cin, Client.AccountNumber);
//    cout << "Enter PinCode? ";
//    getline(cin, Client.PinCode);
//    cout << "Enter Name? ";
//    getline(cin, Client.Name);
//    cout << "Enter Phone? ";
//    getline(cin, Client.Phone);
//    cout << "Enter AccountBalance? ";
//    cin >> Client.AccountBalance;
//    return Client;
//}
//string ConvertRecordToLine(sClient Client, string Separator = "#//#") {
//    string stClientRecord = "";
//    stClientRecord += Client.AccountNumber + Separator;
//    stClientRecord += Client.PinCode + Separator;
//    stClientRecord += Client.Name + Separator;
//    stClientRecord += Client.Phone + Separator;
//    stClientRecord += to_string(Client.AccountBalance);
//    return stClientRecord;
//}
//
//int main() {
//    cout << "\nPlease Enter Client Data: \n\n";
//    sClient Client;
//    Client = ReadNewClient();
//    cout << "\n\nClient Record for Saving is: \n";
//    cout << ConvertRecordToLine(Client);
//    system("pause>0");
//    return 0;
//}
//-------------------------------------------------
//-------------------------------------------------

//-------------------------------------------------
//  ÕÊÌ· „‰ #//# «·Ï »Ì«‰«  Client
//-------------------------------------------------
//struct sClient {
//    string AccountNumber;
//    string PinCode;
//    string Name;
//    string Phone;
//    double AccountBalance;
//};
//
//vector<string> SplitString(string S1, string Delim) {
//    // ≈‰‘«¡ ﬁ«∆„… · Œ“Ì‰ «·ﬂ·„«  «·„›’Ê·…
//    vector<string> vString;
//
//    // „ €Ì— · Œ“Ì‰ „Ê÷⁄ «·›«’·… ›Ì «·”·”·…
//    short pos = 0;
//
//    // ”·”·… · Œ“Ì‰ «·ﬂ·„… «·Õ«·Ì…
//    string sWord;
//
//    // «” Œœ„ Õ·ﬁ… while ·›Õ’ «·”·”·… Ê›’·Â« »«” Œœ«„ «·›«’·… «·„Õœœ…
//    while ((pos = S1.find(Delim)) != string::npos) {
//        // «” Œ—«Ã «·Ã“¡ „‰ «·”·”·… „‰ »œ«Ì… «·”·”·… Õ Ï «·›«’·…
//        sWord = S1.substr(0, pos);
//
//        // «· Õﬁﬁ „„« ≈–« ﬂ«‰  «·ﬂ·„… €Ì— ›«—€… ﬁ»· ≈÷«› Â« ≈·Ï «·ﬁ«∆„…
//        if (sWord != "") {
//            vString.push_back(sWord);
//        }
//
//        // Õ–› «·Ã“¡ «·–Ì  „ ›’·Â „‰ «·”·”·…
//        S1.erase(0, pos + Delim.length());
//    }
//
//    // »⁄œ «·«‰ Â«¡ „‰ «·Õ·ﬁ…° ﬁœ  ﬂÊ‰ Â‰«ﬂ ﬂ·„… ¬Œ—Ï »œÊ‰ ›«’·…° ·–« ‰Õ «Ã ·· Õﬁﬁ „—… √Œ—Ï Ê≈÷«› Â« ≈–« ﬂ«‰  €Ì— ›«—€…
//    if (S1 != "") {
//        vString.push_back(S1);
//    }
//
//    // ≈—Ã«⁄ «·ﬁ«∆„… «·‰Â«∆Ì… ··ﬂ·„«  «·„›’Ê·…
//    return vString;
//}
//
//sClient ConvertLineToRecord(string Line, string Separator = "#//#") {
//    sClient Client;
//    vector<string> vClientData;
//    vClientData = SplitString(Line, Separator);
//    Client.AccountNumber = vClientData[0];
//    Client.PinCode = vClientData[1];
//    Client.Name = vClientData[2];
//    Client.Phone = vClientData[3];
//    Client.AccountBalance = stod(vClientData[4]); //  ÕÊÌ· «·”·”·… ≈·Ï double
//    return Client;
//}
//
//void PrintClientRecord(sClient Client) {
//    cout << "\n\nThe following is the extracted client record:\n";
//    cout << "\nAccout Number: " << Client.AccountNumber;
//    cout << "\nPin Code     : " << Client.PinCode;
//    cout << "\nName         : " << Client.Name;
//    cout << "\nPhone        : " << Client.Phone;
//    cout << "\nAccount Balance: " << Client.AccountBalance;
//}
//
//int main() {
//    string stLine = "A150#//#1234#//#Osama Ali Yahya Haseen Kokabah#//#079999#//#5270.000000";
//    cout << "\nLine Record is:\n";
//    cout << stLine;
//    sClient Client = ConvertLineToRecord(stLine);
//    PrintClientRecord(Client);
//
//
//    cout << "\n";
//    system("pause>0");
//    return 0;
//}
//-------------------------------------------------
//-------------------------------------------------

//-------------------------------------------------
// Õ›Ÿ «·»Ì«‰«  ›Ì „·› ‰’Ì
//-------------------------------------------------
////  ⁄—Ì› ÂÌﬂ· «·⁄„Ì·
//struct sClient {
//    string AccountNumber;
//    string PinCode;
//    string Name;
//    string Phone;
//    double AccountBalance;
//};
//
//// œ«·… ·ﬁ—«¡… »Ì«‰«  ⁄„Ì· ÃœÌœ
//sClient ReadNewClient() {
//    sClient Client;
//    cout << "Enter Account Number? ";
//    getline(cin >> ws, Client.AccountNumber);
//    cout << "Enter PinCode? ";
//    getline(cin, Client.PinCode);
//    cout << "Enter Name? ";
//    getline(cin, Client.Name);
//    cout << "Enter Phone? ";
//    getline(cin, Client.Phone);
//    cout << "Enter AccountBalance? ";
//    cin >> Client.AccountBalance;
//    return Client;
//}
//
//// œ«·… · ÕÊÌ· »Ì«‰«  «·⁄„Ì· ≈·Ï ”·”·… ‰’Ì…
//string ConvertRecordToLine(sClient Client, string Separator = "#//#") {
//    string stClientRecord = "";
//    stClientRecord += Client.AccountNumber + Separator;
//    stClientRecord += Client.PinCode + Separator;
//    stClientRecord += Client.Name + Separator;
//    stClientRecord += Client.Phone + Separator;
//    stClientRecord += to_string(Client.AccountBalance);
//    return stClientRecord;
//}
//
//// œ«·… ·Õ›Ÿ «·”·”·… ›Ì „·›
//void SaveLineInFile(string ClientFileName, string S1) {
//    // ≈‰‘«¡ „ €Ì— „‰ ‰Ê⁄ fstream ·› Õ «·„·›
//    fstream File;
//
//    // › Õ «·„·› "Client.txt" ›Ì Ê÷⁄ «·ﬂ «»… (ios::out)
//    File.open(ClientFileName, ios::out | ios::app);
//
//    // «· Õﬁﬁ „‰ › Õ «·„·› »‰Ã«Õ
//    if (File.is_open()) {
//        // ﬂ «»… «·”·”·… S1 ≈·Ï «·„·›
//        File << S1 << endl;
//    }
//
//    File.close(); // ≈€·«ﬁ «·„·› »⁄œ «·«‰ Â«¡ „‰ «·ﬂ «»…
//
//}
//
//void WantAddLineInFile(string ClientFileName) {
//    char addFill = 'Y';
//
//    do {
//        system("cls"); //  ‰ŸÌ› «·‘«‘…
//        cout << "\nPlease Enter Client Data:\n\n";
//        sClient Client;
//        Client = ReadNewClient(); // ﬁ—«¡… »Ì«‰«  «·⁄„Ì·
//
//        string TheLine = ConvertRecordToLine(Client); //  ÕÊÌ· »Ì«‰«  «·⁄„Ì· ≈·Ï ”·”·… ‰’Ì…
//        SaveLineInFile(ClientFileName, TheLine); // Õ›Ÿ «·”·”·… ›Ì „·›
//
//        cout << "\n\nDo You Want to Add More Clients? (Y/N): ";
//        cin >> addFill;
//    } while (addFill == 'Y' || addFill == 'y');
//}
//
//int main() {
//    
//    WantAddLineInFile(ClientFileName);
//
//    system("pause>0");
//    return 0;
//}
//-------------------------------------------------
//-------------------------------------------------

//-------------------------------------------------
// ⁄—÷ «·»Ì«‰«  „‰ „·› ‰’Ì
//-------------------------------------------------
//  ⁄—Ì› ÂÌﬂ· sClient · Œ“Ì‰ »Ì«‰«  «·⁄„·«¡
//struct sClient {
//    string AccountNumber;
//    string PinCode;
//    string Name;
//    string Phone;
//    double AccountBalance;
//};
//
//// œ«·… · ﬁ”Ì„ ”·”·… ‰’Ì… »«” Œœ«„ ›«’· „⁄Ì‰ Ê≈—Ã«⁄ «·‰’Ê’ «·„›’Ê·…
//vector<string> SplitString(string S1, string Delim) {
//    vector<string> vString;
//    short pos = 0;
//    string sWord;
//
//    while ((pos = S1.find(Delim)) != string::npos) {
//        sWord = S1.substr(0, pos);
//        if (sWord != "") {
//            vString.push_back(sWord);
//        }
//        S1.erase(0, pos + Delim.length());
//    }
//
//    if (S1 != "") {
//        vString.push_back(S1);
//    }
//
//    return vString;
//}
//
//// œ«·… · ÕÊÌ· ”Ã· ⁄„Ì· „‰ ”·”·… ‰’Ì… ≈·Ï ÂÌﬂ· sClient
//sClient ConvertLineToRecord(string Line, string Separator = "#//#") {
//    sClient Client;
//    vector<string> vClientData;
//    vClientData = SplitString(Line, Separator);
//    Client.AccountNumber = vClientData[0];
//    Client.PinCode = vClientData[1];
//    Client.Name = vClientData[2];
//    Client.Phone = vClientData[3];
//    Client.AccountBalance = stod(vClientData[4]);
//    return Client;
//}
//
//// œ«·… · Õ„Ì· »Ì«‰«  «·⁄„·«¡ „‰ „·› ‰’Ì
//vector<sClient> LoadClientsDataFromFile(string FileName) {
//    vector<sClient> vsClient;
//    ifstream MyFile;
//    MyFile.open(FileName, ios::in);
//
//    if (MyFile.is_open()) {
//        string Line;
//        sClient Client;
//
//        while (getline(MyFile, Line)) {
//            Client = ConvertLineToRecord(Line);
//            vsClient.push_back(Client);
//        }
//        MyFile.close();
//    }
//    return vsClient;
//}
//
//// œ«·… ·ÿ»«⁄… ”Ã· ⁄„Ì· Ê«Õœ
//void PrintClientRecord(sClient Client) {
//    cout << "| " << setw(15) << left << Client.AccountNumber;
//    cout << "| " << setw(10) << left << Client.PinCode;
//    cout << "| " << setw(40) << left << Client.Name;
//    cout << "| " << setw(12) << left << Client.Phone;
//    cout << "| " << setw(11) << left << Client.AccountBalance;
//    cout << "|";
//}
//
//// œ«·… ·ÿ»«⁄… Ã„Ì⁄ »Ì«‰«  «·⁄„·«¡
//void PrintAllClientsData(vector<sClient> vClients) {
//    cout << "\n\t\t\t\t\tClient List (" << vClients.size() << ") Client(s).\n";
//    cout << "___________________________________________________________________________________________________\n" << endl;
//    cout << "| " << left << setw(15) << "Account Number";
//    cout << "| " << left << setw(10) << "Pin Code";
//    cout << "| " << left << setw(40) << "Client Name";
//    cout << "| " << left << setw(12) << "Phone";
//    cout << "| " << left << setw(11) << "Balance";
//    cout << "|";
//    cout << "\n___________________________________________________________________________________________________\n" << endl;
//
//    for (sClient Client : vClients) {
//        PrintClientRecord(Client);
//        cout << endl;
//    }
//    cout << "___________________________________________________________________________________________________\n" << endl;
//}
//
//// «·œ«·… «·—∆Ì”Ì…
//int main() {
//
//    vector<sClient> vClients = LoadClientsDataFromFile(ClientsFileName); //  Õ„Ì· »Ì«‰«  «·⁄„·«¡ „‰ «·„·›
//    PrintAllClientsData(vClients); // ÿ»«⁄… »Ì«‰«  «·⁄„·«¡
//    system("pause>0");
//    return 0;
//}

//-------------------------------------------------
// ⁄—÷ «·»Ì«‰«  „‰ „·› ‰’Ì Õ”» —ﬁ„ «·⁄„Ì·
//-------------------------------------------------
////  ⁄—Ì› «·ÂÌﬂ· sClient · Œ“Ì‰ »Ì«‰«  «·⁄„·«¡
//struct sClient {
//    string AccountNumber;
//    string PinCode;
//    string Name;
//    string Phone;
//    double AccountBalance;
//};
//
//// œ«·… · ﬁ”Ì„ ”·”·… ‰’Ì… ≈·Ï √Ã“«¡ »‰«¡ ⁄·Ï ›«’· „⁄Ì‰
//vector<string> SplitString(string S1, string Delim) {
//    vector<string> vString;
//    short pos = 0;
//    string sWord;
//
//    while ((pos = S1.find(Delim)) != std::string::npos) {
//        sWord = S1.substr(0, pos); // Store the word
//        if (sWord != "") {
//            vString.push_back(sWord);
//        }
//        S1.erase(0, pos + Delim.length());
//    }
//
//    if (S1 != "") {
//        vString.push_back(S1); // Add the last word of the string
//    }
//
//    return vString;
//}
//
//// œ«·… · ÕÊÌ· ”ÿ— ‰’Ì ≈·Ï ”Ã· sClient
//sClient ConvertLineToRecord(string Line, string Separator = "#//#") {
//    sClient Client;
//    vector<string> vClientData;
//    vClientData = SplitString(Line, Separator);
//    Client.AccountNumber = vClientData[0];
//    Client.PinCode = vClientData[1];
//    Client.Name = vClientData[2];
//    Client.Phone = vClientData[3];
//    Client.AccountBalance = stod(vClientData[4]); // Convert string to double
//    return Client;
//}
//
//// œ«·… · Õ„Ì· »Ì«‰«  «·⁄„·«¡ „‰ „·›
//vector<sClient> LoadClientsDataFromFile(string FileName) {
//    vector<sClient> vClients;
//    ifstream MyFile;
//    MyFile.open(FileName, ios::in); // Open the file in read mode
//
//    if (MyFile.is_open()) {
//        string Line;
//        sClient Client;
//        while (getline(MyFile, Line)) {
//            Client = ConvertLineToRecord(Line);
//            vClients.push_back(Client);
//        }
//        MyFile.close();
//    }
//    return vClients;
//}
//
//// œ«·… ·ÿ»«⁄…  ›«’Ì· «·⁄„Ì·
//void PrintClientCard(sClient Client) {
//    cout << "\nThe following are the client details:\n";
//    cout << "\nAccount Number: " << Client.AccountNumber;
//    cout << "\nPin Code      : " << Client.PinCode;
//    cout << "\nName          : " << Client.Name;
//    cout << "\nPhone         : " << Client.Phone;
//    cout << "\nAccount Balance: " << Client.AccountBalance;
//}
//
//// œ«·… ··»ÕÀ ⁄‰ ⁄„Ì· »—ﬁ„ Õ”«»Â
//bool FindClientByAccountNumber(string AccountNumber, sClient& Client) {
//    vector<sClient> vClients = LoadClientsDataFromFile(ClientsFileName);
//    for (sClient C : vClients) {
//        if (C.AccountNumber == AccountNumber) {
//            Client = C;
//            return true;
//        }
//    }
//    return false;
//}
//
//// œ«·… ·ﬁ—«¡… —ﬁ„ Õ”«» «·⁄„Ì· „‰ «·„” Œœ„
//string ReadClientAccountNumber() {
//    string AccountNumber = "";
//    cout << "\nPlease enter Account Number: ";
//    cin >> AccountNumber;
//    return AccountNumber;
//}
//
//int main() {
//    sClient Client;
//    string AccountNumber = ReadClientAccountNumber(); // Read client's account number
//
//    // «· Õﬁﬁ „„« ≈–« ﬂ«‰ «·⁄„Ì· „ÊÃÊœ« »«” Œœ«„ —ﬁ„ Õ”«»Â
//    if (FindClientByAccountNumber(AccountNumber, Client)) {
//        // ≈–«  „ «·⁄ÀÊ— ⁄·Ï «·⁄„Ì·° ﬁ„ »ÿ»«⁄…  ›«’Ì·Â
//        PrintClientCard(Client);
//    }
//    else {
//        // ≈–« ·„ Ì „ «·⁄ÀÊ— ⁄·Ï «·⁄„Ì·° ⁄—÷ —”«·… »√‰ «·⁄„Ì· €Ì— „ÊÃÊœ
//        cout << "\nClient with Account Number (" << AccountNumber << ") is Not Found!";
//    }
//
//    system("pause>0");
//    return 0;
//}

//-------------------------------------------------
// Õ–› «·»Ì«‰«  „‰ „·› ‰’Ì Õ”» —ﬁ„ «·⁄„Ì·
//-------------------------------------------------
//// ÂÌﬂ· Ì„À· »Ì«‰«  «·⁄„Ì·
//struct sClient {
//    string AccountNumber; // —ﬁ„ «·Õ”«»
//    string PinCode; // —„“ «·„—Ê—
//    string Name; // «”„ «·⁄„Ì·
//    string Phone; // —ﬁ„ «·Â« ›
//    double AccountBalance; // —’Ìœ «·Õ”«»
//    bool MarkForDelete = false; //  „ÌÌ“ «·”Ã· ··Õ–›
//};
//
//// œ«·…  ﬁÊ„ » ﬁ”Ì„ ”·”·… ‰’Ì… ≈·Ï ⁄œ… √Ã“«¡ »«” Œœ«„ ›«’· „⁄Ì‰
//vector<string> SplitString(string S1, string Delim) {
//    vector<string> vString;
//    short pos = 0;
//    string sWord;
//
//    while ((pos = S1.find(Delim)) != std::string::npos) {
//        sWord = S1.substr(0, pos);
//        if (sWord != "") {
//            vString.push_back(sWord);
//        }
//        S1.erase(0, pos + Delim.length());
//    }
//
//    if (S1 != "") {
//        vString.push_back(S1);
//    }
//
//    return vString;
//}
//
//// œ«·…  ÕÊÌ· ”·”·… ‰’Ì… ≈·Ï »Ì«‰«  ⁄„Ì·
//sClient ConvertLineToRecord(string Line, string Seperator = "#//#") {
//    sClient Client;
//    vector<string> vClientData;
//    vClientData = SplitString(Line, Seperator);
//    Client.AccountNumber = vClientData[0];
//    Client.PinCode = vClientData[1];
//    Client.Name = vClientData[2];
//    Client.Phone = vClientData[3];
//    Client.AccountBalance = stod(vClientData[4]);
//    return Client;
//}
//
//// œ«·…  ÕÊÌ· »Ì«‰«  ⁄„Ì· ≈·Ï ”·”·… ‰’Ì…
//string ConvertRecordToLine(sClient Client, string Seperator = "#//#") {
//    string stClientRecord = "";
//    stClientRecord += Client.AccountNumber + Seperator;
//    stClientRecord += Client.PinCode + Seperator;
//    stClientRecord += Client.Name + Seperator;
//    stClientRecord += Client.Phone + Seperator;
//    stClientRecord += to_string(Client.AccountBalance);
//    return stClientRecord;
//}
//
//// œ«·… · Õ„Ì· »Ì«‰«  «·⁄„·«¡ „‰ „·›
//vector<sClient> LoadClientsDataFromFile(string FileName) {
//    vector<sClient> vClients;
//    fstream MyFile;
//    MyFile.open(FileName, ios::in); // Ê÷⁄ «·ﬁ—«¡…
//    if (MyFile.is_open()) {
//        string Line;
//        sClient Client;
//        while (getline(MyFile, Line)) {
//            Client = ConvertLineToRecord(Line);
//            vClients.push_back(Client);
//        }
//        MyFile.close();
//    }
//    return vClients;
//}
//
//// œ«·… ·ÿ»«⁄… »Ì«‰«  «·⁄„Ì· ⁄·Ï «·‘«‘…
//void PrintClientCard(sClient Client) {
//    cout << "\nThe following are the client details:\n";
//    cout << "\nAccout Number: " << Client.AccountNumber;
//    cout << "\nPin Code     : " << Client.PinCode;
//    cout << "\nName         : " << Client.Name;
//    cout << "\nPhone        : " << Client.Phone;
//    cout << "\nAccount Balance: " << Client.AccountBalance;
//}
//
//// œ«·… ··»ÕÀ ⁄‰ ⁄„Ì· »«” Œœ«„ —ﬁ„ «·Õ”«»
//bool FindClientByAccountNumber(string AccountNumber, vector<sClient> vClients, sClient& Client) {
//    for (sClient C : vClients) {
//        if (C.AccountNumber == AccountNumber) {
//            Client = C;
//            return true;
//        }
//    }
//    return false;
//}
//
//// œ«·… ·Ê÷⁄ ⁄·«„… ·Õ–› ⁄„Ì· »«” Œœ«„ —ﬁ„ «·Õ”«»
//bool MarkClientForDeleteByAccountNumber(string AccountNumber, vector<sClient>& vClients) {
//    for (sClient& C : vClients) {
//        if (C.AccountNumber == AccountNumber) {
//            C.MarkForDelete = true;
//            return true;
//        }
//    }
//    return false;
//}
//
//// œ«·… ·Õ›Ÿ »Ì«‰«  «·⁄„·«¡ ›Ì „·›
//vector<sClient> SaveClientsDataToFile(string FileName, vector<sClient> vClients) {
//    fstream MyFile;
//    MyFile.open(FileName, ios::out); // Ê÷⁄ «·ﬂ «»… (”Ì „ «·ﬂ «»… ›Êﬁ «·„·› ≈–« ﬂ«‰ „ÊÃÊœ«)
//    if (MyFile.is_open()) {
//        for (sClient C : vClients) {
//            if (!C.MarkForDelete) {
//                string DataLine = ConvertRecordToLine(C);
//                MyFile << DataLine << endl;
//            }
//        }
//        MyFile.close();
//    }
//    return vClients;
//}
//
//// œ«·… ·Õ–› ⁄„Ì· »«” Œœ«„ —ﬁ„ «·Õ”«»
//bool DeleteClientByAccountNumber(string AccountNumber, vector<sClient>& vClients) {
//    sClient Client;
//    char Answer = 'n';
//
//    if (FindClientByAccountNumber(AccountNumber, vClients, Client)) {
//        PrintClientCard(Client);
//        cout << "\n\nAre you sure you want to delete this client? y/n ? ";
//        cin >> Answer;
//
//        if (Answer == 'y' || Answer == 'Y') {
//            MarkClientForDeleteByAccountNumber(AccountNumber, vClients);
//            SaveClientsDataToFile(ClientsFileName, vClients);
//            vClients = LoadClientsDataFromFile(ClientsFileName);
//            cout << "\n\nClient Deleted Successfully.";
//            return true;
//        }
//    }
//    else {
//        cout << "\nClient with Account Number (" << AccountNumber << ") is Not Found!";
//        return false;
//    }
//}
//
//// œ«·… ·ﬁ—«¡… —ﬁ„ «·Õ”«» „‰ «·„” Œœ„
//string ReadClientAccountNumber() {
//    string AccountNumber = "";
//    cout << "\nPlease enter Account Number: ";
//    cin >> AccountNumber;
//    return AccountNumber;
//}
//
//// «·œ«·… «·—∆Ì”Ì…
//int main() {
//    vector<sClient> vClients = LoadClientsDataFromFile(ClientsFileName);
//    string AccountNumber = ReadClientAccountNumber();
//    DeleteClientByAccountNumber(AccountNumber, vClients);
//    system("pause>0");
//    return 0;
//}


//-------------------------------------------------
//  ⁄œÌ· «·»Ì«‰«  „‰ „·› ‰’Ì Õ”» —ﬁ„ «·⁄„Ì·
//-------------------------------------------------

//  ⁄—Ì› ÂÌﬂ· · „ÀÌ· »Ì«‰«  «·⁄„Ì·
struct sClient {
    string AccountNumber; // —ﬁ„ «·Õ”«»
    string PinCode; // —„“ «·„—Ê—
    string Name; // «”„ «·⁄„Ì·
    string Phone; // —ﬁ„ «·Â« ›
    double AccountBalance; // —’Ìœ «·Õ”«»
    bool MarkForDelete = false; // ⁄·«„… ·· ÕœÌœ „« ≈–« ﬂ«‰ «·⁄„Ì· „Õ–Ê›« √„ ·« («·«› —«÷Ì €Ì— „Õ–Ê›)
};

// œ«·… · ﬁ”Ì„ ”·”·… ‰’Ì… ≈·Ï √Ã“«¡ »«” Œœ«„ ›«’· „Õœœ
vector<string> SplitString(string S1, string Delim) {
    vector<string> vString; // ﬁ«∆„… · Œ“Ì‰ «·√Ã“«¡ «·„ﬁ”„…
    short pos = 0; // «·„ €Ì— · Œ“Ì‰ „Ê÷⁄ «·›«’·
    string sWord; // ”·”·… · Œ“Ì‰ ﬂ· Ã“¡

    // «·»œ¡ ›Ì  ﬁ”Ì„ «·”·”·… ≈·Ï √Ã“«¡
    while ((pos = S1.find(Delim)) != std::string::npos) {
        sWord = S1.substr(0, pos); // «” Œ—«Ã «·Ã“¡
        if (sWord != "") { // «· √ﬂœ „‰ √‰ «·Ã“¡ €Ì— ›«—€
            vString.push_back(sWord); // ≈÷«›… «·Ã“¡ ≈·Ï «·ﬁ«∆„…
        }
        S1.erase(0, pos + Delim.length()); // Õ–› «·Ã“¡ «·„” Œ—Ã „‰ «·”·”·…
    }

    if (S1 != "") { // «· √ﬂœ „‰ ÊÃÊœ Ã“¡ ¬Œ— ·„ Ì „ „⁄«·Ã Â »⁄œ
        vString.push_back(S1); // ≈÷«›… «·Ã“¡ «·√ŒÌ— ≈·Ï «·ﬁ«∆„…
    }

    return vString; // ≈—Ã«⁄ «·√Ã“«¡ «·„ﬁ”„…
}

// œ«·… · ÕÊÌ· ”·”·… ‰’Ì… ≈·Ï »Ì«‰«  ⁄„Ì·
sClient ConvertLineToRecord(string Line, string Seperator = "#//#") {
    sClient Client;
    vector<string> vClientData;
    vClientData = SplitString(Line, Seperator); //  ﬁ”Ì„ «·”·”·… ≈·Ï √Ã“«¡ »«” Œœ«„ «·›«’· «·„⁄ÿÏ
    Client.AccountNumber = vClientData[0]; //  ⁄ÌÌ‰ —ﬁ„ «·Õ”«»
    Client.PinCode = vClientData[1]; //  ⁄ÌÌ‰ —„“ «·„—Ê—
    Client.Name = vClientData[2]; //  ⁄ÌÌ‰ «”„ «·⁄„Ì·
    Client.Phone = vClientData[3]; //  ⁄ÌÌ‰ —ﬁ„ «·Â« ›
    Client.AccountBalance = stod(vClientData[4]); //  ÕÊÌ· ”·”·… «·—’Ìœ ≈·Ï double Ê ⁄ÌÌ‰Â
    return Client; // ≈—Ã«⁄ »Ì«‰«  «·⁄„Ì·
}

// œ«·… · ÕÊÌ· »Ì«‰«  ⁄„Ì· ≈·Ï ”·”·… ‰’Ì…
string ConvertRecordToLine(sClient Client, string Seperator = "#//#") {
    string stClientRecord = ""; // ”·”·… · Œ“Ì‰ »Ì«‰«  «·⁄„Ì·
    stClientRecord += Client.AccountNumber + Seperator; // ≈÷«›… —ﬁ„ «·Õ”«» „⁄ «·›«’·
    stClientRecord += Client.PinCode + Seperator; // ≈÷«›… —„“ «·„—Ê— „⁄ «·›«’·
    stClientRecord += Client.Name + Seperator; // ≈÷«›… «”„ «·⁄„Ì· „⁄ «·›«’·
    stClientRecord += Client.Phone + Seperator; // ≈÷«›… —ﬁ„ «·Â« › „⁄ «·›«’·
    stClientRecord += to_string(Client.AccountBalance); //  ÕÊÌ· «·—’Ìœ ≈·Ï ”·”·… ‰’Ì… Ê≈÷«› Â«
    return stClientRecord; // ≈—Ã«⁄ ”·”·… »Ì«‰«  «·⁄„Ì·
}

// œ«·… · Õ„Ì· »Ì«‰«  «·⁄„·«¡ „‰ „·›
vector<sClient> LoadClientsDataFromFile(string FileName) {
    vector<sClient> vClients; // ﬁ«∆„… · Œ“Ì‰ »Ì«‰«  «·⁄„·«¡
    fstream MyFile; // ﬂ«∆‰ ·› Õ «·„·›
    MyFile.open(FileName, ios::in); // › Õ «·„·› ›Ì Ê÷⁄ «·ﬁ—«¡…
    if (MyFile.is_open()) { // «· √ﬂœ „‰ √‰ «·› Õ ‰ÃÕ
        string Line; // ”·”·… · Œ“Ì‰ ﬂ· ”ÿ— „‰ «·„·›
        sClient Client; // ﬂ«∆‰ · Œ“Ì‰ »Ì«‰«  ﬂ· ⁄„Ì·
        while (getline(MyFile, Line)) { // ﬁ—«¡… «·»Ì«‰«  ”ÿ—« »”ÿ—
            Client = ConvertLineToRecord(Line); //  ÕÊÌ· «·”ÿ— ≈·Ï »Ì«‰«  ⁄„Ì·
            vClients.push_back(Client); // ≈÷«›… »Ì«‰«  «·⁄„Ì· ≈·Ï «·ﬁ«∆„…
        }
        MyFile.close(); // ≈€·«ﬁ «·„·› »⁄œ «·«‰ Â«¡ „‰ «·ﬁ—«¡…
    }
    return vClients; // ≈—Ã«⁄ ﬁ«∆„… »Ì«‰«  «·⁄„·«¡
}

// œ«·… ·ÿ»«⁄… »Ì«‰«  «·⁄„Ì·
void PrintClientCard(sClient Client) {
    cout << "\nThe following are the client details:\n";
    cout << "\nAccout Number: " << Client.AccountNumber;
    cout << "\nPin Code     : " << Client.PinCode;
    cout << "\nName         : " << Client.Name;
    cout << "\nPhone        : " << Client.Phone;
    cout << "\nAccount Balance: " << Client.AccountBalance;
}

// œ«·… ··»ÕÀ ⁄‰ ⁄„Ì· »«” Œœ«„ —ﬁ„ «·Õ”«»
bool FindClientByAccountNumber(string AccountNumber, vector<sClient> vClients, sClient& Client) {
    for (sClient C : vClients) { // «·⁄„· ⁄·Ï ﬂ· ⁄„Ì· ›Ì «·ﬁ«∆„…
        if (C.AccountNumber == AccountNumber) { // «· Õﬁﬁ „„« ≈–« ﬂ«‰ —ﬁ„ «·Õ”«» „ÿ«»ﬁ«
            Client = C; // ≈–« ﬂ«‰ «·⁄„Ì· „ÊÃÊœ«° ﬁ„ » ⁄ÌÌ‰ ﬁÌ„ »Ì«‰« Â ··⁄„Ì· «·„ı⁄ÿÏ ﬂ„—Ã⁄
            return true; // ≈—Ã«⁄ ﬁÌ„… ’ÕÌÕ… ··≈‘«—… ≈·Ï «·⁄ÀÊ— ⁄·Ï «·⁄„Ì·
        }
    }
    return false; // ≈—Ã«⁄ ﬁÌ„… Œ«ÿ∆… ··≈‘«—… ≈·Ï ⁄œ„ «·⁄ÀÊ— ⁄·Ï «·⁄„Ì·
}

// œ«·… · €ÌÌ— »Ì«‰«  «·⁄„Ì·
sClient ChangeClientRecord(string AccountNumber) {
    sClient Client; // ≈‰‘«¡ ﬂ«∆‰ ⁄„Ì· ÃœÌœ
    Client.AccountNumber = AccountNumber; //  ⁄ÌÌ‰ —ﬁ„ «·Õ”«»

    // «” ﬁ»«· «·»Ì«‰«  «·ÃœÌœ… „‰ «·„” Œœ„
    cout << "\n\nEnter PinCode? ";
    getline(cin >> ws, Client.PinCode); // «” ﬁ»«· —„“ «·„—Ê— „⁄ „—«⁄«… «·›—«€«  «·»Ì÷«¡
    cout << "Enter Name? ";
    getline(cin, Client.Name); // «” ﬁ»«· «”„ «·⁄„Ì·
    cout << "Enter Phone? ";
    getline(cin, Client.Phone); // «” ﬁ»«· —ﬁ„ «·Â« ›
    cout << "Enter AccountBalance? ";
    cin >> Client.AccountBalance; // «” ﬁ»«· —’Ìœ «·Õ”«»

    return Client; // ≈—Ã«⁄ «·⁄„Ì· »⁄œ  €ÌÌ— «·»Ì«‰« 
}
// œ«·… ·Õ›Ÿ »Ì«‰«  «·⁄„·«¡ ›Ì „·›
vector<sClient> SaveClientsDataToFile(string FileName, vector<sClient> vClients) {
    fstream MyFile; // ﬂ«∆‰ ·› Õ «·„·›
    MyFile.open(FileName, ios::out); // › Õ «·„·› ›Ì Ê÷⁄ «·ﬂ «»… (”Ì „ «·ﬂ «»… ›Êﬁ «·„·› ≈–« ﬂ«‰ „ÊÃÊœ«)
    if (MyFile.is_open()) { // «· √ﬂœ „‰ √‰ «·› Õ ‰ÃÕ
        string DataLine; // ”·”·… · Œ“Ì‰ ﬂ· ”ÿ— „‰ »Ì«‰«  «·⁄„·«¡
        for (sClient C : vClients) { // «·⁄„· ⁄·Ï ﬂ· ⁄„Ì· ›Ì «·ﬁ«∆„…
            if (!C.MarkForDelete) { // «· Õﬁﬁ „„« ≈–« ﬂ«‰ «·⁄„Ì· ·Ì” „⁄·„« ··Õ–›
                DataLine = ConvertRecordToLine(C); //  ÕÊÌ· »Ì«‰«  «·⁄„Ì· ≈·Ï ”·”·… ‰’Ì…
                MyFile << DataLine << endl; // ﬂ «»… «·”ÿ— ≈·Ï «·„·›
            }
        }
        MyFile.close(); // ≈€·«ﬁ «·„·› »⁄œ «·ﬂ «»…
    }
    return vClients; // ≈—Ã«⁄ «·ﬁ«∆„… »⁄œ «·«‰ Â«¡ „‰ «·⁄„·Ì…
}

// œ«·… · ÕœÌÀ »Ì«‰«  ⁄„Ì· »«” Œœ«„ —ﬁ„ «·Õ”«»
bool UpdateClientByAccountNumber(string AccountNumber, vector<sClient>& vClients) {
    sClient Client; // ≈‰‘«¡ ﬂ«∆‰ ⁄„Ì· · Œ“Ì‰ »Ì«‰«  «·⁄„Ì· «·„ÿ·Ê» «· ÕœÌÀ ⁄·ÌÂ
    char Answer = 'n'; // „ €Ì— · Œ“Ì‰ ≈Ã«»… «·„” Œœ„

    if (FindClientByAccountNumber(AccountNumber, vClients, Client)) { // «·»ÕÀ ⁄‰ «·⁄„Ì· »«” Œœ«„ —ﬁ„ «·Õ”«»
        PrintClientCard(Client); // ÿ»«⁄… »Ì«‰«  «·⁄„Ì·
        cout << "\n\nAre you sure you want to update this client? y/n ? ";
        cin >> Answer; // «” ﬁ»«· ≈Ã«»… «·„” Œœ„

        if (Answer == 'y' || Answer == 'Y') { // «· Õﬁﬁ „„« ≈–« ﬂ«‰ «·„” Œœ„ „Ê«›ﬁ ⁄·Ï «· ÕœÌÀ
            for (sClient& C : vClients) { // «·⁄„· ⁄·Ï ﬂ· ⁄„Ì· ›Ì «·ﬁ«∆„… »ÕÀ« ⁄‰ «·⁄„Ì· «·„ÿ·Ê» «· ÕœÌÀ ⁄·ÌÂ
                if (C.AccountNumber == AccountNumber) { // «· Õﬁﬁ „„« ≈–« ﬂ«‰ —ﬁ„ «·Õ”«» „ÿ«»ﬁ«
                    C = ChangeClientRecord(AccountNumber); //  ÕœÌÀ »Ì«‰«  «·⁄„Ì·
                    break; // «·Œ—ÊÃ „‰ «·Õ·ﬁ… »„Ã—œ «·⁄ÀÊ— ⁄·Ï «·⁄„Ì· «·„ÿ·Ê»
                }
            }
            SaveClientsDataToFile(ClientsFileName, vClients); // Õ›Ÿ «·»Ì«‰«  «·„ÕœÀ… ›Ì «·„·›
            cout << "\n\nClient Updated Successfully.";
            return true; // ≈—Ã«⁄ ﬁÌ„… ’ÕÌÕ… ··≈‘«—… ≈·Ï ‰Ã«Õ «· ÕœÌÀ
        }
    }
    else {
        cout << "\nClient with Account Number (" << AccountNumber << ") is Not Found!"; // ≈‘⁄«— »⁄œ„ «·⁄ÀÊ— ⁄·Ï «·⁄„Ì·
        return false; // ≈—Ã«⁄ ﬁÌ„… Œ«ÿ∆… ··≈‘«—… ≈·Ï ›‘· «·⁄ÀÊ— ⁄·Ï «·⁄„Ì·
    }
}

// œ«·… ·ﬁ—«¡… —ﬁ„ «·Õ”«» „‰ «·„” Œœ„
string ReadClientAccountNumber() {
    string AccountNumber = ""; //  ÂÌ∆… „ €Ì— —ﬁ„ «·Õ”«»
    cout << "\nPlease enter AccountNumber? ";
    cin >> AccountNumber; // «” ﬁ»«· —ﬁ„ «·Õ”«» „‰ «·„” Œœ„
    return AccountNumber; // ≈—Ã«⁄ —ﬁ„ «·Õ”«»
}

// «·œ«·… «·—∆Ì”Ì…
int main() {
    //  Õ„Ì· »Ì«‰«  «·⁄„·«¡ „‰ «·„·›
    vector<sClient> vClients = LoadClientsDataFromFile(ClientsFileName);

    // «” ﬁ»«· —ﬁ„ «·Õ”«» „‰ «·„” Œœ„
    string AccountNumber = ReadClientAccountNumber();

    //  ÕœÌÀ »Ì«‰«  «·⁄„Ì· »«” Œœ«„ —ﬁ„ «·Õ”«»
    UpdateClientByAccountNumber(AccountNumber, vClients);

    system("pause>0");
    return 0;
}
